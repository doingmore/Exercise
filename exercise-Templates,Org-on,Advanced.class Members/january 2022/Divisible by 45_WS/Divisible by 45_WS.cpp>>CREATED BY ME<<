#include <iostream>
#include <algorithm>

#include "BigInt.h"


size_t digitsSum(const BigInt& number)
{
	size_t sum=0;
	std::string digits = number.getDigits();

	for (size_t i = 0; i < digits.size(); i++)
	{
		sum += digits[i] - '0';
	}

	return sum;
}

bool dividesBy9(const BigInt& number)
{
	return digitsSum(number) % 9 == 0;
}

bool dividesBy5(const BigInt& number)
{
	std::string digits = number.getDigits();
	int lastInt = digits.size()-1;

	return digits[lastInt] == '0' || digits[lastInt] == '5';
}


int main()
{
	std::string rangeStart;
	std::string rangeEndStr;

	std::cin >> rangeStart >> rangeEndStr;

	BigInt rangeEnd(rangeEndStr);

	BigInt firstInRange;
	for ( BigInt num = rangeStart; num < rangeEnd; num+=1 )
	{
		// if a number divides on 5 and 9,then it divides on 5*9=45
		if (dividesBy5(num) && dividesBy9(num))
		{
			firstInRange = num;
			break;
		}
	}

	for (BigInt num = firstInRange; num < rangeEnd; num+=45)
	{
		std::cout << num << '\n';
	}

	return 0;
}
